class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        ArrayList<Integer> result = new ArrayList<>();
        int[] array = new int[2*nums.length];
        for(Integer i : nums){
            array[i]++;
        }
        for(int i=0; i<array.length; i++){
            if(array[i]> 1) result.add(i);
        }
        return result;
    }
}
// Runtime: 4 ms, faster than 97.96% of Java online submissions for Find All Duplicates in an Array.
// Memory Usage: 47.4 MB, less than 94.32% of Java online submissions for Find All Duplicates in an Array.

//or
class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        // HashMap<Integer> map = new HashMap<Integer>(); eta wrong 2 perameter needed
        HashMap<Integer,Integer> map=new HashMap<Integer,Integer>();
        ArrayList<Integer> result = new ArrayList<>();
        for(int i=0; i< nums.length; i++){
            if(map.containsKey(nums[i])) result.add(nums[i]);
            map.put(nums[i],i);
        }
        return result;
    }
}
// Runtime: 19 ms, faster than 13.06% of Java online submissions for Find All Duplicates in an Array.
// Memory Usage: 48.5 MB, less than 18.42% of Java online submissions for Find All Duplicates in an Array.
